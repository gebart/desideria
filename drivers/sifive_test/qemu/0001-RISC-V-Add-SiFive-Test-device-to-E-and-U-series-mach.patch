From 9f33752dd5828ad012ced8b78e59ab1e1ed633eb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Joakim=20Nohlga=CC=8Ard?= <joakim@nohlgard.se>
Date: Mon, 1 Jun 2020 16:46:20 +0200
Subject: [PATCH] RISC-V: Add SiFive Test device to E and U series machines

Forward port of commit 0eec372a36b7237caf16ec7c7646a202faba5fdb of
riscv/riscv-qemu (https://github.com/riscv/riscv-qemu/commit/0eec372a36b7237caf16ec7c7646a202faba5fdb)

Add the SiFive Test device to 'sifive_e' and 'sifive_u'
machines so that test cases can shutdown QEMU and signal
an exit code. The SiFive Test Finisher is a real device
that exists in the RTL to allow exiting simulations.
---
 hw/riscv/sifive_e.c         |  3 +++
 hw/riscv/sifive_u.c         | 12 ++++++++++++
 include/hw/riscv/sifive_e.h |  1 +
 include/hw/riscv/sifive_u.h |  1 +
 4 files changed, 17 insertions(+)

diff --git a/hw/riscv/sifive_e.c b/hw/riscv/sifive_e.c
index b53109521e..4ede9f6f81 100644
--- a/hw/riscv/sifive_e.c
+++ b/hw/riscv/sifive_e.c
@@ -41,6 +41,7 @@
 #include "hw/riscv/riscv_hart.h"
 #include "hw/riscv/sifive_plic.h"
 #include "hw/riscv/sifive_clint.h"
+#include "hw/riscv/sifive_test.h"
 #include "hw/riscv/sifive_uart.h"
 #include "hw/riscv/sifive_e.h"
 #include "hw/riscv/sifive_e_prci.h"
@@ -57,6 +58,7 @@ static const struct MemmapEntry {
     [SIFIVE_E_DEBUG] =    {        0x0,      0x100 },
     [SIFIVE_E_MROM] =     {     0x1000,     0x2000 },
     [SIFIVE_E_OTP] =      {    0x20000,     0x2000 },
+    [SIFIVE_E_TEST] =     {   0x100000,     0x1000 },
     [SIFIVE_E_CLINT] =    {  0x2000000,    0x10000 },
     [SIFIVE_E_PLIC] =     {  0xc000000,  0x4000000 },
     [SIFIVE_E_AON] =      { 0x10000000,     0x8000 },
@@ -165,6 +167,7 @@ static void riscv_sifive_e_soc_realize(DeviceState *dev, Error **errp)
     sifive_clint_create(memmap[SIFIVE_E_CLINT].base,
         memmap[SIFIVE_E_CLINT].size, ms->smp.cpus,
         SIFIVE_SIP_BASE, SIFIVE_TIMECMP_BASE, SIFIVE_TIME_BASE, false);
+    sifive_test_create(memmap[SIFIVE_E_TEST].base);
     create_unimplemented_device("riscv.sifive.e.aon",
         memmap[SIFIVE_E_AON].base, memmap[SIFIVE_E_AON].size);
     sifive_e_prci_create(memmap[SIFIVE_E_PRCI].base);
diff --git a/hw/riscv/sifive_u.c b/hw/riscv/sifive_u.c
index 4299bdf480..21d0807144 100644
--- a/hw/riscv/sifive_u.c
+++ b/hw/riscv/sifive_u.c
@@ -45,6 +45,7 @@
 #include "hw/riscv/riscv_hart.h"
 #include "hw/riscv/sifive_plic.h"
 #include "hw/riscv/sifive_clint.h"
+#include "hw/riscv/sifive_test.h"
 #include "hw/riscv/sifive_uart.h"
 #include "hw/riscv/sifive_u.h"
 #include "hw/riscv/boot.h"
@@ -69,6 +70,7 @@ static const struct MemmapEntry {
 } sifive_u_memmap[] = {
     [SIFIVE_U_DEBUG] =    {        0x0,      0x100 },
     [SIFIVE_U_MROM] =     {     0x1000,    0x11000 },
+    [SIFIVE_U_TEST] =     {   0x100000,     0x1000 },
     [SIFIVE_U_CLINT] =    {  0x2000000,    0x10000 },
     [SIFIVE_U_L2LIM] =    {  0x8000000,  0x2000000 },
     [SIFIVE_U_PLIC] =     {  0xc000000,  0x4000000 },
@@ -294,6 +296,15 @@ static void create_fdt(SiFiveUState *s, const struct MemmapEntry *memmap,
     qemu_fdt_setprop_cell(fdt, nodename, "reg", 0x0);
     g_free(nodename);
 
+    nodename = g_strdup_printf("/soc/test@%lx",
+        (long)memmap[SIFIVE_U_TEST].base);
+    qemu_fdt_add_subnode(fdt, nodename);
+    qemu_fdt_setprop_string(fdt, nodename, "compatible", "sifive,test0");
+    qemu_fdt_setprop_cells(fdt, nodename, "reg",
+        0x0, memmap[SIFIVE_U_TEST].base,
+        0x0, memmap[SIFIVE_U_TEST].size);
+    g_free(nodename);
+
     nodename = g_strdup_printf("/soc/serial@%lx",
         (long)memmap[SIFIVE_U_UART0].base);
     qemu_fdt_add_subnode(fdt, nodename);
@@ -633,6 +644,7 @@ static void riscv_sifive_u_soc_realize(DeviceState *dev, Error **errp)
 
     create_unimplemented_device("riscv.sifive.u.gem-mgmt",
         memmap[SIFIVE_U_GEM_MGMT].base, memmap[SIFIVE_U_GEM_MGMT].size);
+    sifive_test_create(memmap[SIFIVE_U_TEST].base);
 }
 
 static Property riscv_sifive_u_soc_props[] = {
diff --git a/include/hw/riscv/sifive_e.h b/include/hw/riscv/sifive_e.h
index 25ce7aa9d5..ea6d0d35db 100644
--- a/include/hw/riscv/sifive_e.h
+++ b/include/hw/riscv/sifive_e.h
@@ -51,6 +51,7 @@ enum {
     SIFIVE_E_DEBUG,
     SIFIVE_E_MROM,
     SIFIVE_E_OTP,
+    SIFIVE_E_TEST,
     SIFIVE_E_CLINT,
     SIFIVE_E_PLIC,
     SIFIVE_E_AON,
diff --git a/include/hw/riscv/sifive_u.h b/include/hw/riscv/sifive_u.h
index 16c297ec5f..a26191ae51 100644
--- a/include/hw/riscv/sifive_u.h
+++ b/include/hw/riscv/sifive_u.h
@@ -67,6 +67,7 @@ typedef struct SiFiveUState {
 enum {
     SIFIVE_U_DEBUG,
     SIFIVE_U_MROM,
+    SIFIVE_U_TEST,
     SIFIVE_U_CLINT,
     SIFIVE_U_L2LIM,
     SIFIVE_U_PLIC,
-- 
2.26.2

